/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
       vector<double> v;
        queue<TreeNode*> q;
        if(root==NULL)
            return v;
        q.push(root);
        int n;
        double sum=0;
        
        while(!q.empty())
        {
            n=q.size();
            sum=0;
            for(int i=0;i<n;i++)
            {
            TreeNode* x=q.front();
            sum=sum+(x->val);
            q.pop();
            if(x->left!=NULL)
            {
                
                q.push(x->left);
            }
            if(x->right!=NULL)
            {
                
                q.push(x->right);
            }
            }
            v.push_back(sum/n);
        }
        return v;
        
    }
};
