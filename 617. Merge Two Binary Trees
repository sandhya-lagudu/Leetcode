/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    TreeNode* traversal(TreeNode* r1,TreeNode* r2)
    {
        if((r1==NULL)&&(r2==NULL))
            return NULL;
        else if((r1!=NULL)&&(r2!=NULL))
        {
            TreeNode* root=new TreeNode(r1->val+r2->val);
            root->left=traversal(r1->left,r2->left);
            root->right=traversal(r1->right,r2->right);
            return root;
        }
        else if(r1!=NULL)
        {
            return r1; 
        }
        
            return r2; 
        
    }
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {
       return traversal(root1,root2);
        
    }
};
